


1、找到css文件中注释(  /*  注释内容  */ )
     /\*.*?\*/             使用单行匹配，用到了懒惰匹配“*?”，不使用懒惰匹配的话这里会把"/*1111*/ /*2222*/"匹配到一起，实际上它属于两个匹配项

	 例子： 
			/*0000*/
			/*1111*/ /*2222*/
			/* ===============
			 * 公共 css-common
			 * =============== */


2、不以“th”开头的单词匹配。
   \b(?!th)\w+\b


3、查找html中的a标签   <input name='123' key='/>' value="/>" />
   <a(?:"[^"]*"|'[^']*'|.*?)*(?:\/>|\<\/a\>)


4、匹配HTML Tag    <input name=123 value=">" >

   <("[^"]*"|'[^']*'|[^'">])*>     (我们不用"+"来修饰[^'">]的原因是([^'">]+)*可能会带来灾难性的后果。匹配次数呈指数级增长。比如：对于简单的目标字符串helloworld，是星号会迭代10次，每一次迭代中[^'">]+匹配一个字符？还是星号迭代3次，内部的[^'">]+分别匹配5、2、3个字符？或者2、3、1、4个字符？还是其他情况？这样会把正则引擎搞疯掉的啦！)


5、匹配string   "we have a \"awesome\" world!"

    "(?:[^"]|(?<=\\)")*"

6、把一个字符串从右往左每4位加一个空格   "1234567890"

    (?!^)(?=(.{4})+$)